{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/projects-to-github/TrybeWallet/src/components/WalletForm.js\";\nimport React, { Component } from 'react';\nimport { func, arrayOf, string, bool, shape, number } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrencies } from '../redux/actions/currencies.action';\nimport { addExpenseThunk, updateExpense } from '../redux/actions/expenses.action';\nimport { updateTotalField } from '../redux/actions/totalField.action';\nimport WalletFormContainer, { WalletFormLabel, WalletFormInput, WalletFormSelect, WalletFormButton } from './WalletForm.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WalletForm extends Component {\n  constructor(props) {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    const toEdit = props.editor ? props.expenses.filter(expense => expense.id === props.idToEdit)[0] || {} : {};\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      ...toEdit\n    };\n  }\n\n  componentDidMount() {\n    const {\n      updateCurrencies\n    } = this.props;\n    updateCurrencies();\n  }\n\n  handleChange(_ref) {\n    let {\n      target: {\n        name,\n        value\n      }\n    } = _ref;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleClick() {\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = this.state;\n    const {\n      addExpense,\n      updateExpensesList,\n      updateTotal\n    } = this.props;\n    const {\n      expenses,\n      editor,\n      idToEdit\n    } = this.props; // const inputValue = Number.isNaN(value) || 1;\n\n    if (editor) {\n      const updatedExpanses = expenses.map(expense => expense.id === idToEdit ? { ...expense,\n        value,\n        description,\n        currency,\n        method,\n        tag\n      } : expense);\n      updateExpensesList(updatedExpanses);\n      updateTotal();\n    } else addExpense({\n      value,\n      description,\n      currency,\n      method,\n      tag\n    });\n\n    this.setState({\n      value: '',\n      description: ''\n    });\n  }\n\n  render() {\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = this.state;\n    const {\n      currencies,\n      editor\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(WalletFormContainer, {\n      \"data-testid\": \"wallet-form\",\n      children: [/*#__PURE__*/_jsxDEV(WalletFormLabel, {\n        htmlFor: \"expense\",\n        children: [\"Valor\", /*#__PURE__*/_jsxDEV(WalletFormInput, {\n          \"data-testid\": \"value-input\",\n          id: \"expense\",\n          name: \"value\",\n          onChange: this.handleChange,\n          placeholder: \"Ex: 1.99\",\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WalletFormLabel, {\n        htmlFor: \"description\",\n        children: [\"Descri\\xE7\\xE3o\", /*#__PURE__*/_jsxDEV(WalletFormInput, {\n          \"data-testid\": \"description-input\",\n          id: \"description\",\n          name: \"description\",\n          onChange: this.handleChange,\n          placeholder: \"Ex: Hamb\\xFArguer\",\n          value: description,\n          width: \"200px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WalletFormLabel, {\n        htmlFor: \"currency\",\n        children: [\"Moeda\", /*#__PURE__*/_jsxDEV(WalletFormSelect, {\n          \"data-testid\": \"currency-input\",\n          id: \"currency\",\n          name: \"currency\",\n          onChange: this.handleChange,\n          value: currency,\n          children: currencies.map(currencyName => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: currencyName,\n            children: currencyName\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WalletFormLabel, {\n        htmlFor: \"method\",\n        children: [\"Pagamento\", /*#__PURE__*/_jsxDEV(WalletFormSelect, {\n          \"data-testid\": \"method-input\",\n          id: \"method\",\n          name: \"method\",\n          onChange: this.handleChange,\n          value: method,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Dinheiro\",\n            children: \"Dinheiro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Cart\\xE3o de cr\\xE9dito\",\n            children: \"Cart\\xE3o de cr\\xE9dito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Cart\\xE3o de d\\xE9bito\",\n            children: \"Cart\\xE3o de d\\xE9bito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WalletFormLabel, {\n        htmlFor: \"tag\",\n        children: [\"Categoria\", /*#__PURE__*/_jsxDEV(WalletFormSelect, {\n          \"data-testid\": \"tag-input\",\n          id: \"tag\",\n          name: \"tag\",\n          onChange: this.handleChange,\n          value: tag,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Alimenta\\xE7\\xE3o\",\n            children: \"Alimenta\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Lazer\",\n            children: \"Lazer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Trabalho\",\n            children: \"Trabalho\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Transporte\",\n            children: \"Transporte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Sa\\xFAde\",\n            children: \"Sa\\xFAde\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WalletFormButton, {\n        type: \"button\",\n        onClick: this.handleClick,\n        children: editor ? 'Editar despesa' : 'Adicionar despesa'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nWalletForm.propTypes = {\n  addExpense: func.isRequired,\n  currencies: arrayOf(string).isRequired,\n  editor: bool.isRequired,\n  expenses: arrayOf(shape({\n    currency: string\n  })).isRequired,\n  idToEdit: number.isRequired,\n  updateCurrencies: func.isRequired,\n  updateExpensesList: func.isRequired,\n  updateTotal: func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  currencies: state.wallet.currencies,\n  editor: state.wallet.editor,\n  expenses: state.wallet.expenses,\n  idToEdit: state.wallet.idToEdit\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addExpense: expense => dispatch(addExpenseThunk(expense)),\n  updateCurrencies: () => dispatch(getCurrencies()),\n  updateExpensesList: expenses => dispatch(updateExpense(expenses)),\n  updateTotal: () => dispatch(updateTotalField())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);","map":{"version":3,"sources":["/Users/brenoaraujo/projects-to-github/TrybeWallet/src/components/WalletForm.js"],"names":["React","Component","func","arrayOf","string","bool","shape","number","connect","getCurrencies","addExpenseThunk","updateExpense","updateTotalField","WalletFormContainer","WalletFormLabel","WalletFormInput","WalletFormSelect","WalletFormButton","WalletForm","constructor","props","handleChange","bind","handleClick","toEdit","editor","expenses","filter","expense","id","idToEdit","state","value","description","currency","method","tag","componentDidMount","updateCurrencies","target","name","setState","addExpense","updateExpensesList","updateTotal","updatedExpanses","map","render","currencies","currencyName","Math","random","propTypes","isRequired","mapStateToProps","wallet","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { func, arrayOf, string, bool, shape, number } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { getCurrencies } from '../redux/actions/currencies.action';\nimport { addExpenseThunk, updateExpense } from '../redux/actions/expenses.action';\nimport { updateTotalField } from '../redux/actions/totalField.action';\n\nimport WalletFormContainer, {\n  WalletFormLabel,\n  WalletFormInput,\n  WalletFormSelect,\n  WalletFormButton,\n} from './WalletForm.styles';\n\nclass WalletForm extends Component {\n  constructor(props) {\n    super();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    const toEdit = props.editor\n      ? props.expenses.filter((expense) => expense.id === props.idToEdit)[0] || {}\n      : {};\n\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      ...toEdit,\n    };\n  }\n\n  componentDidMount() {\n    const { updateCurrencies } = this.props;\n    updateCurrencies();\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  handleClick() {\n    const { value, description, currency, method, tag } = this.state;\n    const { addExpense, updateExpensesList, updateTotal } = this.props;\n    const { expenses, editor, idToEdit } = this.props;\n\n    // const inputValue = Number.isNaN(value) || 1;\n\n    if (editor) {\n      const updatedExpanses = expenses.map((expense) => (expense.id === idToEdit\n        ? ({ ...expense, value, description, currency, method, tag })\n        : expense));\n\n      updateExpensesList(updatedExpanses);\n      updateTotal();\n    } else addExpense({ value, description, currency, method, tag });\n\n    this.setState({ value: '', description: '' });\n  }\n\n  render() {\n    const { value, description, currency, method, tag } = this.state;\n    const { currencies, editor } = this.props;\n\n    return (\n      <WalletFormContainer data-testid=\"wallet-form\">\n        <WalletFormLabel htmlFor=\"expense\">\n          Valor\n          <WalletFormInput\n            data-testid=\"value-input\"\n            id=\"expense\"\n            name=\"value\"\n            onChange={ this.handleChange }\n            placeholder=\"Ex: 1.99\"\n            value={ value }\n          />\n        </WalletFormLabel>\n\n        <WalletFormLabel htmlFor=\"description\">\n          Descrição\n          <WalletFormInput\n            data-testid=\"description-input\"\n            id=\"description\"\n            name=\"description\"\n            onChange={ this.handleChange }\n            placeholder=\"Ex: Hambúrguer\"\n            value={ description }\n            width=\"200px\"\n          />\n        </WalletFormLabel>\n\n        <WalletFormLabel htmlFor=\"currency\">\n          Moeda\n          <WalletFormSelect\n            data-testid=\"currency-input\"\n            id=\"currency\"\n            name=\"currency\"\n            onChange={ this.handleChange }\n            value={ currency }\n          >\n            { currencies.map((currencyName) => (\n              <option key={ Math.random() } value={ currencyName }>\n                {currencyName}\n              </option>\n            )) }\n          </WalletFormSelect>\n        </WalletFormLabel>\n\n        <WalletFormLabel htmlFor=\"method\">\n          Pagamento\n          <WalletFormSelect\n            data-testid=\"method-input\"\n            id=\"method\"\n            name=\"method\"\n            onChange={ this.handleChange }\n            value={ method }\n          >\n            <option value=\"Dinheiro\">Dinheiro</option>\n            <option value=\"Cartão de crédito\">Cartão de crédito</option>\n            <option value=\"Cartão de débito\">Cartão de débito</option>\n          </WalletFormSelect>\n        </WalletFormLabel>\n\n        <WalletFormLabel htmlFor=\"tag\">\n          Categoria\n          <WalletFormSelect\n            data-testid=\"tag-input\"\n            id=\"tag\"\n            name=\"tag\"\n            onChange={ this.handleChange }\n            value={ tag }\n          >\n            <option value=\"Alimentação\">Alimentação</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Transporte\">Transporte</option>\n            <option value=\"Saúde\">Saúde</option>\n          </WalletFormSelect>\n        </WalletFormLabel>\n\n        <WalletFormButton type=\"button\" onClick={ this.handleClick }>\n          { editor ? 'Editar despesa' : 'Adicionar despesa' }\n        </WalletFormButton>\n      </WalletFormContainer>\n    );\n  }\n}\n\nWalletForm.propTypes = {\n  addExpense: func.isRequired,\n  currencies: arrayOf(string).isRequired,\n  editor: bool.isRequired,\n  expenses: arrayOf(shape({ currency: string })).isRequired,\n  idToEdit: number.isRequired,\n  updateCurrencies: func.isRequired,\n  updateExpensesList: func.isRequired,\n  updateTotal: func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  editor: state.wallet.editor,\n  expenses: state.wallet.expenses,\n  idToEdit: state.wallet.idToEdit,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addExpense: (expense) => dispatch(addExpenseThunk(expense)),\n  updateCurrencies: () => dispatch(getCurrencies()),\n  updateExpensesList: (expenses) => dispatch(updateExpense(expenses)),\n  updateTotal: () => dispatch(updateTotalField()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);\n"]},"metadata":{},"sourceType":"module"}