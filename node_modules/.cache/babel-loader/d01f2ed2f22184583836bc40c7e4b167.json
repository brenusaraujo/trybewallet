{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/projects-to-github/TrybeWallet/src/App.js\";\nimport React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { string } from 'prop-types';\nimport { ThemeProvider } from 'styled-components';\nimport * as Themes from './themes';\nimport GlobalStyles from './global.styles';\nimport Routes from './routes';\n\nfunction App(props) {\n  const {\n    theme\n  } = props;\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: Themes[theme],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  })));\n}\n\nApp.propTypes = {\n  theme: string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  theme: state.user.theme\n});\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"names":["React","Switch","connect","string","ThemeProvider","Themes","GlobalStyles","Routes","App","props","theme","propTypes","isRequired","mapStateToProps","state","user"],"sources":["/Users/brenoaraujo/projects-to-github/TrybeWallet/src/App.js"],"sourcesContent":["import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { string } from 'prop-types';\nimport { ThemeProvider } from 'styled-components';\n\nimport * as Themes from './themes';\nimport GlobalStyles from './global.styles';\nimport Routes from './routes';\n\nfunction App(props) {\n  const { theme } = props;\n  return (\n    <Switch>\n      <ThemeProvider theme={ Themes[theme] }>\n        <GlobalStyles />\n        <Routes />\n      </ThemeProvider>\n    </Switch>\n  );\n}\n\nApp.propTypes = {\n  theme: string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  theme: state.user.theme,\n});\n\nexport default connect(mapStateToProps)(App);\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;EAClB,MAAM;IAAEC;EAAF,IAAYD,KAAlB;EACA,oBACE,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,aAAD;IAAe,KAAK,EAAGJ,MAAM,CAACK,KAAD,CAA7B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,YAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,CADF,CADF;AAQD;;AAEDF,GAAG,CAACG,SAAJ,GAAgB;EACdD,KAAK,EAAEP,MAAM,CAACS;AADA,CAAhB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;EAClCJ,KAAK,EAAEI,KAAK,CAACC,IAAN,CAAWL;AADgB,CAAZ,CAAxB;;AAIA,eAAeR,OAAO,CAACW,eAAD,CAAP,CAAyBL,GAAzB,CAAf"},"metadata":{},"sourceType":"module"}