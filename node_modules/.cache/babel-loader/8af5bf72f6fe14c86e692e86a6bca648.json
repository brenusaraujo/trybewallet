{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/projects-to-github/TrybeWallet/src/components/Table.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { arrayOf, shape, number, func } from 'prop-types';\nimport { deleteExpense, editExpense } from '../redux/actions/expenses.action';\nimport { updateTotalField } from '../redux/actions/totalField.action';\nimport StyledTable, { StyledButtonsContainer, StyledTableButton } from './Table.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.processExpense = this.processExpense.bind(this);\n  }\n\n  processExpense(expense) {\n    const {\n      value,\n      currency,\n      exchangeRates\n    } = expense;\n    const currencyData = exchangeRates[currency];\n    const {\n      name,\n      ask\n    } = currencyData;\n    return { ...expense,\n      name,\n      ask,\n      total: (+value * +ask).toFixed(2)\n    };\n  }\n\n  render() {\n    const {\n      expenses,\n      removeExpense,\n      updateTotal,\n      editorMode\n    } = this.props;\n    const processedExpenses = expenses.map(expense => this.processExpense(expense));\n    return /*#__PURE__*/_jsxDEV(StyledTable, {\n      \"data-testid\": \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"th1\",\n            children: \"Descri\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"th2\",\n            children: \"Tag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"th3\",\n            children: \"M\\xE9todo de pagamento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"th4\",\n            children: \"Valor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"th5\",\n            children: \"Moeda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"th6\",\n            children: \"C\\xE2mbio utilizado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"th7\",\n            children: \"Valor convertido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"th8\",\n            children: \"Moeda de convers\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"th9\",\n            children: \"Editar/Excluir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: processedExpenses.map(expense => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            headers: \"th1\",\n            children: expense.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            headers: \"th2\",\n            children: expense.tag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            headers: \"th3\",\n            children: expense.method\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            headers: \"th4\",\n            children: Number(expense.value).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            headers: \"th5\",\n            children: expense.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            headers: \"th6\",\n            children: Number(expense.ask).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            headers: \"th7\",\n            children: expense.total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            headers: \"th8\",\n            children: \"Real\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            headers: \"th9\",\n            children: /*#__PURE__*/_jsxDEV(StyledButtonsContainer, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableButton, {\n                backgroundColor: \"#27ae60\",\n                \"data-testid\": \"edit-btn\",\n                onClick: () => editorMode(expense.id),\n                type: \"button\",\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableButton, {\n                backgroundColor: \"#e74c3c\",\n                \"data-testid\": \"delete-btn\",\n                onClick: () => {\n                  removeExpense(expense);\n                  updateTotal();\n                },\n                type: \"button\",\n                children: \"Excluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, Math.random(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nTable.propTypes = {\n  expenses: arrayOf(shape({\n    id: number\n  })).isRequired,\n  removeExpense: func.isRequired,\n  updateTotal: func.isRequired,\n  editorMode: func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  expenses: state.wallet.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeExpense: expense => dispatch(deleteExpense(expense)),\n  updateTotal: () => dispatch(updateTotalField()),\n  editorMode: id => dispatch(editExpense(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/Users/brenoaraujo/projects-to-github/TrybeWallet/src/components/Table.js"],"names":["React","Component","connect","arrayOf","shape","number","func","deleteExpense","editExpense","updateTotalField","StyledTable","StyledButtonsContainer","StyledTableButton","Table","constructor","processExpense","bind","expense","value","currency","exchangeRates","currencyData","name","ask","total","toFixed","render","expenses","removeExpense","updateTotal","editorMode","props","processedExpenses","map","description","tag","method","Number","id","Math","random","propTypes","isRequired","mapStateToProps","state","wallet","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { arrayOf, shape, number, func } from 'prop-types';\n\nimport { deleteExpense, editExpense } from '../redux/actions/expenses.action';\nimport { updateTotalField } from '../redux/actions/totalField.action';\n\nimport StyledTable, {\n  StyledButtonsContainer,\n  StyledTableButton,\n} from './Table.styles';\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.processExpense = this.processExpense.bind(this);\n  }\n\n  processExpense(expense) {\n    const { value, currency, exchangeRates } = expense;\n    const currencyData = exchangeRates[currency];\n    const { name, ask } = currencyData;\n\n    return { ...expense, name, ask, total: (+value * +ask).toFixed(2) };\n  }\n\n  render() {\n    const { expenses, removeExpense, updateTotal, editorMode } = this.props;\n    const processedExpenses = expenses.map((expense) => this.processExpense(expense));\n\n    return (\n      <StyledTable data-testid=\"table\">\n        <thead>\n          <tr>\n            <th id=\"th1\">Descrição</th>\n            <th id=\"th2\">Tag</th>\n            <th id=\"th3\">Método de pagamento</th>\n            <th id=\"th4\">Valor</th>\n            <th id=\"th5\">Moeda</th>\n            <th id=\"th6\">Câmbio utilizado</th>\n            <th id=\"th7\">Valor convertido</th>\n            <th id=\"th8\">Moeda de conversão</th>\n            <th id=\"th9\">Editar/Excluir</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          { processedExpenses.map((expense) => (\n            <tr key={ Math.random() }>\n              <td headers=\"th1\">{ expense.description }</td>\n              <td headers=\"th2\">{ expense.tag }</td>\n              <td headers=\"th3\">{ expense.method }</td>\n              <td headers=\"th4\">{ Number(expense.value).toFixed(2) }</td>\n              <td headers=\"th5\">{ expense.name }</td>\n              <td headers=\"th6\">{ Number(expense.ask).toFixed(2) }</td>\n              <td headers=\"th7\">{ expense.total }</td>\n              <td headers=\"th8\">Real</td>\n              <td headers=\"th9\">\n                <StyledButtonsContainer>\n                  <StyledTableButton\n                    backgroundColor=\"#27ae60\"\n                    data-testid=\"edit-btn\"\n                    onClick={ () => editorMode(expense.id) }\n                    type=\"button\"\n                  >\n                    Editar\n                  </StyledTableButton>\n\n                  <StyledTableButton\n                    backgroundColor=\"#e74c3c\"\n                    data-testid=\"delete-btn\"\n                    onClick={ () => { removeExpense(expense); updateTotal(); } }\n                    type=\"button\"\n                  >\n                    Excluir\n                  </StyledTableButton>\n                </StyledButtonsContainer>\n              </td>\n            </tr>\n          )) }\n        </tbody>\n      </StyledTable>\n    );\n  }\n}\n\nTable.propTypes = {\n  expenses: arrayOf(shape({ id: number })).isRequired,\n  removeExpense: func.isRequired,\n  updateTotal: func.isRequired,\n  editorMode: func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeExpense: (expense) => dispatch(deleteExpense(expense)),\n  updateTotal: () => dispatch(updateTotalField()),\n  editorMode: (id) => dispatch(editExpense(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}